{"pages":[],"posts":[{"title":"MySQL笔记","text":"基本概念简介基本概念介绍数据库的作用DataBase(DB)用来存放和管理数据 数据共享 减少数据冗余(每个应用不需要单独存放数据) 数据独立 数据集中管理 数据一致性 故障处理(遇到异常处理) 常用的数据库 MySQL 开源免费 关系型数据库管理系统 SQL Server 微软开发 关系型数据库管理系统 一般用于web存储数据 Oracle 世界使用最广泛之一 Sybase 开放 高性能 DB2 IBM开发 主要用于大型应用 关系型数据库和非关系型数据库 关系型数据库 由二维表的形式存放数据(可以用SQL查询语句) 非关系型数据库(NoSQL) 存储格式灵活(不支持SQL查询语句) 关于SQL结构化查询语言(Structured Query Language),简称SQL 访问标准数据库的标准计算机语言 MySQL的安装和配置SQL语法SQL语法对于不同的SQL数据库可能有各自的私有拓展,但是都支持SQL标准 数据库表关系型数据库以二维表方式存放数据,一个数据库中通常包含一个或者多个表 Persons ID 姓名 年龄 城市 1 张三 19 武汉 2 李四 18 北京 3 王五 20 广州 上述表格Persons中包含三条记录,和四列(id 姓名 年龄和城市) SQL语句分类数据库执行的所有工作由SQL语句完成,大致可以分为DDL,DML和DQL三种(SQL对大小写不敏感) DML 数据操作语言(Data Manipulation Language)主要是添加删除更新数据 指令 作用 update 更新数据表 delete 从数据表中删除数据 insert into 插入数据 DDL 数据定义语言 (Data Definition Language)主要是创造和删除表格,也可以定义索引,构建表和表之间的联系,添加表之间的约束 语句 作用 creat database 创建新的数据库 alter database 修改数据库 create table 创建新的表 alter table 修改数据库表 drop table 删除数据库表 create index 创建索引 drop index 删除索引 DQL 数据查询语言(Data Query Language) 主要是查询数据，是通常最频繁的数据库操作 指令 作用 select 从数据库中查询数据 关于注释 12345-- 单行注释,不能换行/* 这种是多行注释 可以任意行*/ DQL和DML语句select作用 从表格中选取数据,结果存放在结果表(也称为结果集)语句使用格式 select 列名 from 表名 12345-- 如果需要选取多个列则用逗号隔开select ID,姓名 from Persons-- 如果需要选取所有列可以直接使用*select * from Persons 关键字 distinct在选取的时候 可能存在重复的值,可以加上distinct这个关键字来避免重复避免重复 select distinct 列名 from 表名 where子句用于有条件的在表中选取数据,可以搭配select使用格式 select 列名 from 表名 where 条件条件可以用的一些操作符 操作符 作用 = 等于 &lt;&gt; 不等于,有些SQL中可以写成!= &gt; 大于 &lt; 小于 &gt;= 大于等于 &lt;= 小于等于 between 在某个范围内 like 搜索某种模式 select * from Persons where ID=2select * from Persons where 名字='张三'对于条件中如果是数值则不需要加单引号,如果是文本(字符或者字符串)则需要用单引号括起来(大部分也支持双引号) and和or用于组合where子句的条件select * from Persons where (ID&gt;2 and ID&lt;4) or 名字='李四' order by按照某一列对结果进行升序排序 1234567891011/*order by 可以将查询到的结果按照升序或者降序排列,搭配关键字asc和desc使用asc 升序(默认,可省略)desc 降序*/-- 按照id升序排列(省略了asc)select * from Persons order by ID-- 按照id降序排列select * from Persons order by ID desc-- 按照id降序,然后按照名字升序select * from Persons order by ID desc,名字 asc insert into1234567/*insert into 用于在指定表格中插入一条记录*/-- 如果是一条完整的数据,那么注意value后面的几个值要和表中的字段一一对应insert into Persons value(20,'赵六',17,'长沙')-- 如果不是一条完整的数据,那么在表名后面加上你要插入的列名,value后面的几个值和列名一一对应insert into Persons(ID,名字) value(21,'孙七') update用于修改表中的数据格式 update 表名 set 列名=新值 where 条件修改一行的若干列update Persons set 年龄=17,城市='武汉' where 名字='孙七' delete用于删除表中的一条记录格式 delete from 表名 where 条件删除表中的一行 delete from Persons where 名字='孙七'如果想要删除表中的所有行 delete from Persons或者delete * from Persons top子句规定需要返回的语句的条目数对于不同的数据库系统top子句不一定支持 SQL Serverselect top number|percent 列名 from 表名 12345-- 从表中选取最前面的两条select top 2 * from Persons-- 从表中选取前50%select top 50 PERCENT * from Persons MySQLselect 列名 from 表名 LIMIT number 12-- 从表里面选取前5条数据select * from Persons LIMIT 5 Oracleselect 列名 from 表名 where ROWNUM &lt;= number like子句用来查找指定条件的语句选取名字为N开头的人select * from Persons where 名字 like 'N%'其中的% 用于定义通配符 表示缺少的字母,如名字以y结尾可以写成’%y’,名字中包含s可以写成’%s%’ 通配符 作用 示例 % 替换一个或者多个字符 %lon% _ 替换一个字符 _uck [字符表] 表示表中的任意一个字符 [lf]uck [^字符表]或者[!字符表] 表示不在表中的任意一个字符 [!123]或者[^123] in允许在寻找的时候指定多个值select * from Persons where 名字 in ('张三','李四') between指定范围select * from Persons where 学号 between 102 and 103 123SELECT * from Personswhere 学号not between 104 AND 105 DDL语句数据类型 名称 类型 说明 int 整型 4字节整数类型,约21亿 bigint 长整型 8字节整数类型,约922亿亿 real 浮点型 4字节浮点数,范围约10^38 double 浮点型 8字节浮点数,范围约10^308 decimal(m,n) 高精度浮小数 由用户指定精度的小数,DECIMAL(20,10)表示一共20位，其中小数10位，通常用于财务计算 char(n) 定长字符串 存储指定长度的字符串,char(100)存储长度100 varchar(n) 变长字符串 存储可变长度的字符串,varchar(n)可以存储长度0-100的字符串 boolean 布尔类型 存储true或者false date 日期类型 存储日期 2020-1-1 time 时间类型 存储时间 12:12:00 datetime 时间日期类型 存储日期+时间 2020-1-1 1:0:0","link":"/2021/03/27/MySQL%E7%AC%94%E8%AE%B0/"},{"title":"工具整理","text":"1.网页篇1. 工具合集 工具123网:各种生活小工具合集 在线工具:各种程序员小工具 alternativeto:付费软件替代品搜索 2. 电子书 IT熊猫:编程类电子书 kindle吧:epub+mobi+azw3格式电子书下载 3. 网盘搜索 云盘狗:百度云搜索引擎 2.电脑软件篇3.手机软件篇4.chrome插件","link":"/2021/02/21/%E5%B7%A5%E5%85%B7%E6%95%B4%E7%90%86/"},{"title":"MySQL学习笔记02_MySQL安装教程","text":"MySQL的安装教程待补齐","link":"/2022/01/10/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002/"},{"title":"MySQL学习笔记03_SQL语句","text":"数据库执行的所有工作都由SQL语句完成,可以分成DML和DDL两种 DML 数据操作语言(Data Manipulation Language)主要是对数据的增删查改(最常用的操作是查询) 指令 作用 select 从数据库中查询数据 update 更新数据表 delete 从数据表中删除数据 insert into 插入数据 DDL 数据定义语言 (Data Definition Language)主要是创造和删除表格,也可以定义索引,构建表和表之间的联系,添加表之间的约束(一般是数据库管理员做的操作) 语句 作用 create database 创建新的数据库 alter database 修改数据库 create table 创建新的表 alter table 修改数据库表 drop table 删除数据库表 create index 创建索引 drop index 删除索引 备注注释方式不同数据库的注释方式可能有些区别,这里只介绍两种,不过多展开 12345-- 单行注释方式,注释内容放到两个横杠后面/*多行注释方式,注释内容放到斜杠星星中间这种注释方式可以跨任意行也能放到任意位置*/ 关于大小写sql对大小写并不敏感,也就是说,英文字符的大小写并不影响语句内容 123-- 以下两句并没有什么区别select * from PersonsSELECT * FROM Persons","link":"/2022/01/10/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B003/"},{"title":"MySQL学习笔记01_基本概念","text":"引言程序,是指令和数据的集合.除了对数据进行运算之外,数据的存储和管理也事关重要.学习编程的过程中,数据的存储主要有两种方式,内存和文件.对于一些只是临时使用的数据,我们可以定义一个变量存储起来,用完之后内存回收数据也就随之消失,对于一些需要长期使用的数据,我们可以将其写入文件,以供后续操作.但是如果需要长期保存和使用的数据太多,简单的文件操作已经不能满足需求,查询和操作的效率底,多个进程同时操作的时候容易引发各种问题,这些问题并不能通过程序本身解决.于是,便有了数据库. 数据库数据库主要用来存储和管理数据,相对于其他数据存储方式(内存/文件),有如下优点: 数据共享 减少数据冗余(每个应用不需要单独存放数据) 数据独立 数据集中管理 数据一致性 故障处理(遇到异常处理) 目前一般采用关系型数据库管理系统(RDBMS)来存储并管理海量数据 部分常用的数据库 MySQL 开源免费 关系型数据库管理系统 SQL Server 微软开发 关系型数据库管理系统 一般用于web存储数据 Oracle 世界使用最广泛之一 Sybase 开放 高性能 DB2 IBM开发 主要用于大型应用 关系型数据库和非关系型数据库 关系型数据库 由二维表的形式存放数据(可以用SQL查询语句) 非关系型数据库(NoSQL) 存储格式灵活(不支持SQL查询语句) 数据库表关系型数据库以二维表方式存放数据,一个数据库中通常包含一个或者多个表 Persons ID 姓名 年龄 城市 1 张三 19 武汉 2 李四 18 北京 3 王五 20 广州 上述表格Persons中包含三条记录,和四列(id 姓名 年龄和城市) 部分关于数据库的术语 数据库(DataBase) 带有相关数据的表的集合 表(table) 带有数据的矩阵 行(Row) 一组相关数据,也叫元组,项或者记录,比如说(1,’张三’,19,’武汉’)就是一组数据(一行) 列(Column) 每一列都包含着相同类型的数据,比如说姓名这一列 SQL(Structured Query Language) 访问标准数据库的标准计算机语言 部分关于学习数据库的教程SQL语法对于不同的SQL数据库可能有各自的私有拓展,但是都支持SQL标准","link":"/2022/01/10/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/"},{"title":"MySQL学习笔记04_DML语句","text":"Persons id name age city 1 张三 19 武汉 2 李四 18 北京 3 王五 20 广州 4 赵六 22 北京 5 孙七 20 武汉 select作用: 从表格中选取数据,结果放入结果表(也称作结果集) 1234567-- 使用格式 select 列名 from 表名-- 如果需要查询多列的话,那么需要用逗号隔开select id,name from Persons-- 如果需要查询所有列的话,可以直接使用*select * from Persons select id,name from Persons这个查询得到的结果集如下 id name 1 张三 2 李四 3 王五 4 赵六 5 孙七 distinct查询过程中如果想要去除重复值,使用distinct 1234-- 使用格式 select distinct 列名 from 表名-- 查询所有人员的城市select distinct city from Persons where用于有条件在表中选取数据 1234567891011-- 使用格式 select 列名 from 表名 where 条件-- 查询表中年龄为20的人员数据select * from Persons where age = 20-- 如果有多个条件使用and和or连接-- 查询所有年龄大于18小于23的人员数据select * from Persons where age &gt;18 and age &lt;23-- 如果比较的依据不是数值类型(比如说城市是不是在武汉),字符串类型的话需要用单引号括起来(大部分用双引号也是可以的)select * from Persons where city = '武汉' 下面这些是可以在where子句中使用的操作符 操作符 作用 = 等于 &lt;&gt; 不等于,有些SQL中可以写成!= &gt; 大于 &lt; 小于 &gt;= 大于等于 &lt;= 小于等于 between 在某个范围内 like 搜索某种模式 between指定范围 12345-- 查询所有年龄在18到23之间的人员数据select * from Persons where age between 18 and 23 -- 其实就相当于 age &gt;=18 and age &lt;=23-- 如果想要查询年龄不在18到23这个区间的人员数据,可以使用notselect * from Persons where age not between 18 and 23 like用来查找指定条件的语句(匹配字符串) 1234567-- 查询所有名字为N开头的人员数据select * from Persons where name like 'N%'/*上面的'N%'中,单引号是因为字符串要用单引号括起来,N%中的%是通配符,表示任意个字符意思是N后面加上任意个字符都是可以匹配上的,比如'Nick' 'Ni',但是'LNi'这种就不会匹配*/ 通配符 作用 示例 % 替换一个或者多个字符 %lon% _ 替换一个字符 _uck [字符表] 表示表中的任意一个字符 [lf]uck [^字符表]或者[!字符表] 表示不在表中的任意一个字符 [!123]或者[^123] in允许查找的时候指定多个值 12345-- 使用格式 select 列名 from 表名 where 列名 in (value1,value2)-- 多个匹配值用逗号隔开,支持字符串和数值类型-- 查询所有在长沙和武汉的人员数据select * from Persons where city in ('长沙','武汉') top规定需要返回的语句条目数,不同数据库系统不一定支持top 12345678910111213141516-- SQL Server-- 格式 select top number|percent 列名 from 表名-- 选取最前面的50条数据select top 50 * from Persons-- 选取前50%数据select top 50 percent * from Persons-- MySQL-- 格式 select 列名 from 表名 limit number-- 选取前50条数据select * from Persons limit 50-- Oracle-- 格式 select 列名 from 表名 where rownum &lt;= number-- 选取前50条数据select * from Persons where rownum &lt;= 50 insert into用于在指定表格中插入一条数据 123456-- 格式 insert into 表名(列1,列2,列3) value(值1,值2,值3)-- 如果是一条完整的数据,那么注意value后面的几个值要和表中的字段一一对应,表名后面可以省略列名insert into Persons value(20,'赵六',17,'长沙')-- 如果不是一条完整的数据,那么在表名后面加上你要插入的列名,value后面的几个值和列名一一对应insert into Persons(id,name) value(21,'孙七') update用于更新表中的数据 123456789101112131415-- 格式 update 表名 set 列名 = 新值 where 条件-- 可以同时修改多个数据,只需要用逗号隔开就行update Persons set age = 17,city = '武汉' where name ='孙七'-- 这里语句开始变长了,为了好看其实可以考虑多写几行,比如说update Personsset age = 17,city = '武汉'where name = '孙七'-- 特别注意下后面的where子句,update会更新所有满足条件的行-- 上面例子是修改所有叫做孙七的年龄和城市,如果表中有多个孙七,那么所有孙七的数据都会被修改-- 如果不写where子句,比如下面这种,会修改整个表的所有行update Personsset age = 17 delete用于删除表中的记录 12345678-- 格式 delete from 表名 where 条件-- 删除表中所有名为孙七的人员数据delete from Persons where name = '孙七'-- 删除表中所有数据delete * from Personsdelete from Persons","link":"/2022/01/11/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B004/"}],"tags":[{"name":"MySQL","slug":"MySQL","link":"/tags/MySQL/"}],"categories":[]}